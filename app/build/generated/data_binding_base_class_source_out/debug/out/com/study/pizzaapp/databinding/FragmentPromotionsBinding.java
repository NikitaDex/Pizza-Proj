// Generated by view binder compiler. Do not edit!
package com.study.pizzaapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.study.pizzaapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPromotionsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout frameLayout;

  @NonNull
  public final ImageButton promo1Btn;

  @NonNull
  public final TextView promo1Text1;

  @NonNull
  public final ImageButton promo2Btn;

  @NonNull
  public final TextView promo2Text1;

  private FragmentPromotionsBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout frameLayout, @NonNull ImageButton promo1Btn,
      @NonNull TextView promo1Text1, @NonNull ImageButton promo2Btn,
      @NonNull TextView promo2Text1) {
    this.rootView = rootView;
    this.frameLayout = frameLayout;
    this.promo1Btn = promo1Btn;
    this.promo1Text1 = promo1Text1;
    this.promo2Btn = promo2Btn;
    this.promo2Text1 = promo2Text1;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPromotionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPromotionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_promotions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPromotionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout frameLayout = (RelativeLayout) rootView;

      id = R.id.promo1_btn;
      ImageButton promo1Btn = rootView.findViewById(id);
      if (promo1Btn == null) {
        break missingId;
      }

      id = R.id.promo1_text1;
      TextView promo1Text1 = rootView.findViewById(id);
      if (promo1Text1 == null) {
        break missingId;
      }

      id = R.id.promo2_btn;
      ImageButton promo2Btn = rootView.findViewById(id);
      if (promo2Btn == null) {
        break missingId;
      }

      id = R.id.promo2_text1;
      TextView promo2Text1 = rootView.findViewById(id);
      if (promo2Text1 == null) {
        break missingId;
      }

      return new FragmentPromotionsBinding((RelativeLayout) rootView, frameLayout, promo1Btn,
          promo1Text1, promo2Btn, promo2Text1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
